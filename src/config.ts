const local = process.env.IS_OFFLINE?.toString() === 'true';

const config = {
    local,
    stage: process.env.STAGE as string,
    apiBaseUrl: `${local ? 'http' : 'https'}://${process.env.API_DOMAIN}/${process.env.STAGE}`,
    fallbackSubdomain: process.env.FALLBACK_ACCOUNT_SUBDOMAIN,
    debug: process.env.DEBUG?.toString() === 'true',
    errorsTopic: process.env.ERRORS_TOPIC_ARN as string,
    mainTopic: process.env.EVENTS_TOPIC_ARN as string,
    internalApiKey: process.env.INTERNAL_API_KEY,
    debugMailAddress: process.env.DEBUG_EMAIL_ADDR as string,
    authEmailSource: process.env.AUTH_EMAIL_SOURCE as string,
    notificationsEmailSource: process.env.NOTIFICATIONS_EMAIL_SOURCE as string,
    mailAssetsUrl: `https://${process.env.ASSETS_BASE_URL}`,
    appBaseUrlMask: `https://${process.env.APP_DOMAIN}`,
    protectedBucketName: process.env.PROTECTED_BUCKET_NAME as string,
    appClientId: process.env.APP_CLIENT_ID,
    adminClientId: process.env.ADMIN_CLIENT_ID,
    mysql: {
        host: process.env.MYSQL_HOST,
        database: process.env.MYSQL_DATABASE,
        port: process.env.MYSQL_PORT,
        user: process.env.MYSQL_USER,
        password: process.env.MYSQL_PASSWORD,
        debug: process.env.DEBUG === 'true',
    },
    latePeriod: Number(process.env.LATE_PERIOD) as number,
    latePeriodStart: (6 * Number(process.env.LATE_PERIOD)) as number,
    boletoExpirationDelay: parseInt(process.env.BOLETO_EXPIRATION_DELAY || '7'), // in days
    publicBucketName: process.env.PUBLIC_BUCKET_NAME as string,
    publicAssetsUrl: `https://${process.env.PUBLIC_ASSETS_BASE_URL}`,

    tokyo: {
        yokohamaUrl: process.env.TOKYO_YOKOHAMA_BASE_URL as string,
        osakaUrl: process.env.TOKYO_OSAKA_BASE_URL as string,
        apiKey: process.env.TOKYO_API_KEY as string,
        osakaWebhookKey: process.env.TOKYO_OSAKA_WEBHOOK_KEY as string,
    },
    cispay: {
        baseUrl: process.env.CISPAY_BASE_URL as string,
        apiKey: process.env.CISPAY_API_KEY as string,
        clientId: process.env.CISPAY_CLIENT_ID as string,
        WebhookKey: process.env.CISPAY_WEBHOOK_API_KEY as string,
        sellerId: process.env.CISPAY_SELLER_ID as string,
    },

    newsFeedMaintenance: process.env.NEWS_FEED_FEATURE_FLAG as string,
    jobVacanciesMaintenance: process.env.JOB_VACANCIES_FEATURE_FLAG as string,
    featureFlags: {
        roles: process.env.ROLES_FEATURE_FLAG === 'true', // default off
    },

    deadLettersTable: 'BarueriDeadLetters',
    eventsTable: 'BarueriMainTopicEvents',
    adminsTable: 'BarueriAdmins',
    adminsByEmail: 'BarueriAdminsByEmail',
    sessionsTable: 'BarueriPasswordSessionsTable',
    tokensTable: 'BarueriTokensTable',
    usersByEmail: 'BarueriUsersByEmail',
    usersByMobilePhone: 'BarueriUsersByMobilePhone',
    usersByUsername: 'BarueriUsersByUsername',
    usersTable: 'BarueriUsers',
    usersSectorsTable: 'BarueriUsersSectors',
    usersMysqlTable: 'BarueriUsers',
    usersUpdateHistoryTable: 'BarueriUsersUpdateHistory',
    orgSectorsTable: 'BarueriOrgSectors',
    orgSectorsByPath: 'BarueriOrgSectorsByPath',
    climateChecksTable: 'BarueriClimateChecksTable',
    climateCheckHistoryTable: 'BarueriClimateCheckHistoryTable',
    climateCheckAssiduityTable: 'BarueriClimateCheckAssiduityTable',
    feedbacksTable: 'BarueriFeedbacks',
    newsFeedTable: 'BarueriNewsFeeds',
    newsFeedCommentsTables: 'BarueriNewsFeedComments',
    newsFeedCommentsByDate: 'BarueriNewsFeedCommentsByDate',
    feedbacksMysqlTable: 'BarueriFeedbacks',
    coachingRegistersTable: 'BarueriCoachingRegisters',
    coachingRegistersMySqlTable: 'BarueriCoachingRegisters',
    accountsTable: 'BarueriAccounts',
    accountsBySubdomain: 'BarueriAccountsBySubdomain',
    asyncTasksByAccountAndId: 'BarueriAsyncTasksByAccountAndId',
    changesHistoryByAccountAndDate: 'BarueriChangesHistoryByAccountAndDate',
    ranksTable: 'BarueriRanks',
    ranksByTitle: 'BarueriRanksByTitle',
    evaluationsTable: 'BarueriEvaluations',
    evaluationsMysqlTable: 'BarueriEvaluations',
    pendingActionsTable: 'BarueriPendingActions',
    pendingActionsByAccountAndDate: 'BarueriPendingActionsByAccountAndDate',
    pendingActionsByAccountAndId: 'BarueriPendingActionsByAccountAndId',
    timelinesTable: 'BarueriTimelines',
    timelinesByAccountAndId: 'BarueriTimelinesByAccountAndId',
    reprimandsTable: 'BarueriReprimands',
    reprimandsMysqlTable: 'BarueriReprimands',
    suspensionsTable: 'BarueriSuspensions',
    suspensionsMysqlTable: 'BarueriSuspensions',
    evaluationsSchedulerTable: 'BarueriEvaluationsScheduler',
    evaluationsSchedulersByStatus: 'BarueriEvaluationsSchedulerByStatus',
    vacationsTable: 'BarueriVacations',
    templatesTable: 'BarueriTemplates',
    templatesByAccountAndType: 'BarueriTemplatesByAccountAndType',
    notesTable: 'BarueriNotes',
    faqTable: 'BarueriFaq',
    onboardingTable: 'BarueriOnboarding',
    unseenItemsTable: 'BarueriUnseenItems',
    trainingsTable: 'BarueriTrainings',
    trainingTrailsTable: 'BarueriTrainingTrails',
    trainingProgressesTable: 'BarueriTrainingProgresses',
    dismissInterviewsTable: 'BarueriDismissInterviews',
    dismissInterviewsMysqlTable: 'BarueriDismissInterviews',
    videosTable: 'BarueriVideos',
    videoByTokyo: 'BarueriVideosByTokyoId',
    contentsTable: 'BarueriContents',
    sessionsReportsTable: 'BarueriSessionsReportsTable',
    asyncTasksTable: 'BarueriAsyncTasksTable',
    configurationTable: 'BarueriAccountConfiguration',
    changesHistoryTable: 'BarueriChangesHistoryTable',
    usersHierarchicalMysqlTable: 'BarueriUsersHierarchicalTable',
    jobVacanciesTable: 'BarueriJobVacancies',
    rolesTable: 'BarueriRoles',
    boletosTable: 'BarueriBoletos',
    boletosById: 'BarueriBoletosById',
    boletosByStatus: 'BarueriBoletosByStatus',
};

export type BarueriConfig = typeof config;

export default config;
